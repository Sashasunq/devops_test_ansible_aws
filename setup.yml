---
  - name: Provision an EC2 Instance
    hosts: localhost
    connection: local
    gather_facts: False

    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      security_group: devops-task-sg
      instance_type: t2.micro # Change the security group name here
      image: ami-04169656fea786776 # This is an AMI i created myself
      keypair: devops_key.pem # This is one of my keys that i already have in AWS
      region: us-east-1 # Change the Region
      count: 1
      vpc_name: devops-task-vpc
      vpc_cidr_block: 10.0.0.0/16
      vpc_subnets:
        private-a:
          cidr: 10.0.1.0/24
          az: "{{ aws_region }}a"
        public-a:
          cidr: 10.0.2.0/24
          az: "{{ aws_region }}a"

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:
    - name: Create VPC
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpc_cidr_block }}"
        region: "{{ aws_region }}"
        register: create_vpc
        name: "set fact: VPC ID"
        set_fact:
          vpc_id: "{{ create_vpc.vpc.id }}"
      tags: vpc

    - name: create VPC subnets
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        cidr: "{{ item.value.cidr }}"
        az: "{{ item.value.az }}"
        tags:
          Name: "{{ item.key }}"
          with_dict: "{{ vpc_subnets }}"
          register: create_vpc_subnets
          tags: vpc

    - name: "set fact: VPC subnet IDs"
      set_fact:
        vpc_subnet_ids: "{{ vpc_subnet_ids | default({}) | combine({ item.subnet.tags.Name: item.subnet.id }) }}"
        loop: "{{ create_vpc_subnets.results }}"
      tags: vpc

# iterate over our list of security groups and create each one with the Ansible module
    - name: create VPC security groups
      ec2_group:
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        vpc_id: "{{ vpc_id }}"
        rules: "{{ item.rules }}"
      loop: "{{ vpc_security_groups }}"
      tags: vpc

    # create an EC2 key -- pretty simple
    - name: create EC2 key
      ec2_key:
        name: "{{ vpc_key }}"

    # create a private hosted zone for the VPC with the Ansible module
    - name: create Route 53 private hosted zone
      route53_zone:
        zone: "{{ vpc_dns_zone }}"
        state: present
        vpc_id: "{{ vpc_id }}"
        vpc_region: "{{ aws_region }}"

    - name: Create a security group
      local_action:
        module: ec2_group
        name: "{{ security_group }}"
        description: Security Group for webserver Servers
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: basic_firewall
      tags: security

    - name: Launch the new EC2 Instance
      local_action: ec2
                    group={{ security_group }}
                    instance_type={{ instance_type}}
                    image={{ image }}
                    wait=true
                    region={{ region }}
                    keypair={{ keypair }}
                    count={{count}}
      register: ec2

    - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
      local_action: lineinfile
                    dest="./hosts"
                    regexp={{ item.public_ip }}
                    insertafter="[webserver]" line={{ item.public_ip }}
      with_items: ec2.instances


    - name: Wait for SSH to come up
      local_action: wait_for
                    host={{ item.public_ip }}
                    port=22
                    state=started
      with_items: ec2.instances

    - name: Add tag to Instance(s)
      local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
      with_items: ec2.instances
      args:
        tags:
          Name: webserver
